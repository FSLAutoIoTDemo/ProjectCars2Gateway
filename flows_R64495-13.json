[{"type":"tab","id":"724f24b7.8db0dc","label":"Sheet 1"},{"id":"bb3f342b.44c0c8","type":"http request","name":"HTTP Request to Gaming PC API","method":"GET","ret":"obj","url":"http://localhost:8080/crest/v1/api","x":535,"y":400,"z":"724f24b7.8db0dc","wires":[["6c13e27d.93ec1c","ee7d5aa6.1182a8","e500c31.f1aff4"]]},{"id":"bc9e0dda.4361f","type":"inject","name":"GameAPICallTime","topic":"","payload":"","payloadType":"date","repeat":"1","crontab":"","once":false,"x":243.5,"y":400,"z":"724f24b7.8db0dc","wires":[["bb3f342b.44c0c8"]]},{"id":"73676bd8.8c9894","type":"comment","name":"CSV Output Format Required","info":"/* Need to get the following, and output in CSV format\nlat,        // Will do in GPS flow & prepend to the string from this flow\nlng,        // Will do in GPS flow & prepend to the string from this flow\nalt,        // From Y-Axis\nNS,         // Not avail = 0\nEW,         // Not avail = 0\nspd,        // From carState\nutc,        // TODO UTC Time from Javascript time function\ndte,        // TODO Date from Javascript time function\nroll,       // Not providing yet\npitch,      // Not providing yet\nyaw,        // Not providing yet\nfGax,       // TODO Look at mLocalAcceleration/mWorldAcceleration\nfGay,       // TODO Look at mLocalAcceleration/mWorldAcceleration\nfGaz,       // TODO Look at mLocalAcceleration/mWorldAcceleration\nfUTmx,      // Not providing yet\nfUTmy,      // Not providing yet\nfUTmz,      // Not providing yet\nq0,         // Not available\nq1,         // Not available\nq2,         // Not available\nq3          // Not available","x":517.3333435058594,"y":306.2500400543213,"z":"724f24b7.8db0dc","wires":[]},{"id":"6c13e27d.93ec1c","type":"debug","name":"Raw game data","active":false,"console":"false","complete":"true","x":838.5,"y":300,"z":"724f24b7.8db0dc","wires":[]},{"id":"ee7d5aa6.1182a8","type":"function","name":"Create Non GPS CSV Output","func":"var particpants = msg.payload.participants.mParticipantInfo;\nvar carState = msg.payload.carState;\nvar motionAndDeviceRelated = msg.payload.motionAndDeviceRelated;\n\n// Extract Altitude (meters)\nfor(var i=0; i<particpants.length; i++){\n    if(particpants[i].mName == 'fslautoiotdemo'){\n        var alt=particpants[i].mWorldPosition[1];       // Altitude (m)\n    }\n}\n\nvar speed = carState.mSpeed;\nvar utc = 0;   // TO DO: Need to look at which format to use again\nvar dte = 0;   // TO DO: Need to look at which format to use again \n\nvar fGax = 0;  // TODO Look at mLocalAcceleration/mWorldAcceleration\nvar fGay = 0;  // TODO Look at mLocalAcceleration/mWorldAcceleration\nvar fGaz = 0;  // TODO Look at mLocalAcceleration/mWorldAcceleration\n\nvar newPay = alt+\",0,0,\"+speed+\",\"+utc+\",\"+dte+\",0,0,0,\"+fGax+\",\"+fGay+\",\"+fGaz+\",0,0,0,0,0,0,0\\n\";\n\nvar newMsg = { payload:newPay, topic:'nonGpsFlow' };\nreturn newMsg;","outputs":1,"noerr":0,"x":871.5,"y":460,"z":"724f24b7.8db0dc","wires":[["fc2a61db.03d5a","435c1d06.bca3e4"]]},{"id":"e500c31.f1aff4","type":"function","name":"Extract TrackId + World Space Lat/Lng","func":"var particpants = msg.payload.participants.mParticipantInfo;\nvar event = msg.payload.eventInformation;\n\n//var newPay = particpants[0].mName;\n\nfor(var i=0; i<particpants.length; i++){\n    if(particpants[i].mName == 'fslautoiotdemo'){\n        var x=parseFloat(particpants[i].mWorldPosition[0])*1000;\n        var z=parseFloat(particpants[i].mWorldPosition[2])*1000;\n    }\n}\n\nif (event.mTrackLocation == \"Nuerburgring\")\n    var newPay = \"-945967394 \" + x + \" \" + z;\nelse if (event.mTrackLocation == \"Silverstone\")\n    var newPay = \"1641471184 \" + x + \" \" + z;\nelse if (event.mTrackLocation == \"Brands Hatch\")\n    var newPay = \"1988984740 \" + x + \" \" + z;\nelse if (event.mTrackLocation == \"Mazda Raceway\")\n    var newPay = \"-1612023328 \" + x + \" \" + z;\n\nvar newMsg = {payload:newPay, topic:'GpsFlow'};\nreturn newMsg;","outputs":1,"noerr":0,"x":911,"y":540,"z":"724f24b7.8db0dc","wires":[["f35ae55c.0ca518","e5b666e2.1a4998"]]},{"id":"f35ae55c.0ca518","type":"exec","command":"node \"C:\\Work\\Automotive_CLOUD\\Projects\\FTF2015\\Demo\\EKB\\PCars\\GPS_Conversion\\pcars_getGPSpoint.js\"","addpay":true,"append":"","useSpawn":"","name":"'Exec' Call to GPS Conversion Program","x":1173,"y":1100,"z":"724f24b7.8db0dc","wires":[["eaabed55.15541"],[],[]]},{"id":"360b4cd2.c9f4b4","type":"debug","name":"Output from GPS Conv Program","active":false,"console":"false","complete":"payload","x":1636.5,"y":1080,"z":"724f24b7.8db0dc","wires":[]},{"id":"4829a33a.b7d65c","type":"inject","name":"Inject spoof GPS direct to GPS Conv Prog","topic":"","payload":"-945967394 345193 917875","payloadType":"string","repeat":"","crontab":"","once":false,"x":277.5,"y":1100,"z":"724f24b7.8db0dc","wires":[["f35ae55c.0ca518"]]},{"id":"eaabed55.15541","type":"json","name":"","x":1410,"y":1080,"z":"724f24b7.8db0dc","wires":[["360b4cd2.c9f4b4","fc2a61db.03d5a"]]},{"id":"9f814790.607eb8","type":"function","name":"Spoof Game API Return","func":"var newPay = {\n    \"buildinfo\": {\n        \"mVersion\": 5,\n        \"mBuildVersionNumber\": 917\n    },\n    \"gameStates\": {\n        \"mGameState\": 3,\n        \"mSessionState\": 5,\n        \"mRaceState\": 2\n    },\n    \"participants\": {\n        \"mViewedParticipantIndex\": 0,\n        \"mNumParticipants\": 18,\n        \"mParticipantInfo\": [\n            {\n                \"mIsActive\": true,\n                \"mName\": \"fslautoiotdemo\",\n                \"mWorldPosition\": [\n                    -442.781,\n                    -12.9817,\n                    -1056.17\n                ],\n                \"mCurrentLapDistance\": 400.639,\n                \"mRacePosition\": 9,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"Harald Immervoll\",\n                \"mWorldPosition\": [\n                    162.489,\n                    30.1042,\n                    143.497\n                ],\n                \"mCurrentLapDistance\": 492.188,\n                \"mRacePosition\": 5,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"Ludovic Heurtin\",\n                \"mWorldPosition\": [\n                    168.241,\n                    28.4243,\n                    158.737\n                ],\n                \"mCurrentLapDistance\": 476.478,\n                \"mRacePosition\": 6,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"Umut Rasim Tuzel\",\n                \"mWorldPosition\": [\n                    153.369,\n                    33.4117,\n                    112.878\n                ],\n                \"mCurrentLapDistance\": 525.234,\n                \"mRacePosition\": 4,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"Dene Smith\",\n                \"mWorldPosition\": [\n                    146.32,\n                    34.9527,\n                    96.9293\n                ],\n                \"mCurrentLapDistance\": 541.869,\n                \"mRacePosition\": 3,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"Rene Liivanurm\",\n                \"mWorldPosition\": [\n                    239.392,\n                    9.59027,\n                    323.967\n                ],\n                \"mCurrentLapDistance\": 292.442,\n                \"mRacePosition\": 15,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"Máté Bikfalvi\",\n                \"mWorldPosition\": [\n                    205.917,\n                    18.0611,\n                    246.642\n                ],\n                \"mCurrentLapDistance\": 378.394,\n                \"mRacePosition\": 11,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"John Atkinson\",\n                \"mWorldPosition\": [\n                    237.286,\n                    9.0823,\n                    331.216\n                ],\n                \"mCurrentLapDistance\": 286.446,\n                \"mRacePosition\": 16,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"Thomas Fischer\",\n                \"mWorldPosition\": [\n                    243.353,\n                    8.74643,\n                    332.164\n                ],\n                \"mCurrentLapDistance\": 286.446,\n                \"mRacePosition\": 17,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"Jarno Perala\",\n                \"mWorldPosition\": [\n                    127.394,\n                    41.4575,\n                    26.1581\n                ],\n                \"mCurrentLapDistance\": 615.849,\n                \"mRacePosition\": 1,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"Bastien Martorell\",\n                \"mWorldPosition\": [\n                    223.67,\n                    12.2163,\n                    301.609\n                ],\n                \"mCurrentLapDistance\": 319.532,\n                \"mRacePosition\": 13,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"Aleksi Latvala\",\n                \"mWorldPosition\": [\n                    173.669,\n                    26.9418,\n                    171.575\n                ],\n                \"mCurrentLapDistance\": 460.66,\n                \"mRacePosition\": 7,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"David Batts\",\n                \"mWorldPosition\": [\n                    202.145,\n                    19.6887,\n                    231.965\n                ],\n                \"mCurrentLapDistance\": 395.299,\n                \"mRacePosition\": 10,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"Florian Faistauer\",\n                \"mWorldPosition\": [\n                    248.629,\n                    7.82159,\n                    342.175\n                ],\n                \"mCurrentLapDistance\": 275.079,\n                \"mRacePosition\": 18,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"Alex Porter\",\n                \"mWorldPosition\": [\n                    182.659,\n                    24.5153,\n                    191.888\n                ],\n                \"mCurrentLapDistance\": 439.385,\n                \"mRacePosition\": 8,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"Ivan Lewaschiw\",\n                \"mWorldPosition\": [\n                    219.573,\n                    14.3698,\n                    279.789\n                ],\n                \"mCurrentLapDistance\": 342.757,\n                \"mRacePosition\": 12,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"Kevin Gourley\",\n                \"mWorldPosition\": [\n                    149.027,\n                    35.0537,\n                    95.3933\n                ],\n                \"mCurrentLapDistance\": 541.869,\n                \"mRacePosition\": 2,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            },\n            {\n                \"mIsActive\": true,\n                \"mName\": \"Günthar Rowe\",\n                \"mWorldPosition\": [\n                    232.777,\n                    11.0543,\n                    310.359\n                ],\n                \"mCurrentLapDistance\": 308.367,\n                \"mRacePosition\": 14,\n                \"mLapsCompleted\": 0,\n                \"mCurrentLap\": 1,\n                \"mCurrentSector\": 1\n            }\n        ]\n    },\n    \"unfilteredInput\": {\n        \"mUnfilteredThrottle\": 1,\n        \"mUnfilteredBrake\": 0,\n        \"mUnfilteredSteering\": 0,\n        \"mUnfilteredClutch\": 0\n    },\n    \"vehicleInformation\": {\n        \"mCarName\": \"Renault Megane R.S. 265\",\n        \"mCarClassName\": \"Road C2\"\n    },\n    \"eventInformation\": {\n        \"mLapsInEvent\": 10,\n        \"mTrackLocation\": \"Silverstone\",\n        \"mTrackVariation\": \"GP\",\n        \"mTrackLength\": 3325.76\n    },\n    \"timings\": {\n        \"mLapInvalidated\": false,\n        \"mBestLapTime\": -1,\n        \"mLastLapTime\": -1,\n        \"mCurrentTime\": 25.231,\n        \"mSplitTimeAhead\": 1.02798,\n        \"mSplitTimeBehind\": 0.194626,\n        \"mSplitTime\": 0,\n        \"mEventTimeRemaining\": -1,\n        \"mPersonalFastestLapTime\": -1,\n        \"mWorldFastestLapTime\": 115.046,\n        \"mCurrentSector1Time\": -1,\n        \"mCurrentSector2Time\": -1,\n        \"mCurrentSector3Time\": -1,\n        \"mFastestSector1Time\": -1,\n        \"mFastestSector2Time\": -1,\n        \"mFastestSector3Time\": -1,\n        \"mPersonalFastestSector1Time\": -1,\n        \"mPersonalFastestSector2Time\": -1,\n        \"mPersonalFastestSector3Time\": -1,\n        \"mWorldFastestSector1Time\": 33.497,\n        \"mWorldFastestSector2Time\": 40.074,\n        \"mWorldFastestSector3Time\": 41.475\n    },\n    \"flags\": {\n        \"mHighestFlagColour\": 0,\n        \"mHighestFlagReason\": 0\n    },\n    \"pitInfo\": {\n        \"mPitMode\": 0,\n        \"mPitSchedule\": 0\n    },\n    \"carState\": {\n        \"mCarFlags\": 2,\n        \"mOilTempCelsius\": 52.7033,\n        \"mWaterTempCelsius\": 49.0548,\n        \"mWaterPressureKPa\": 182.547,\n        \"mFuelPressureKPa\": 58.5,\n        \"mFuelLevel\": 0.391907,\n        \"mFuelCapacity\": 60,\n        \"mSpeed\": 32.9303,\n        \"mRpm\": 5871.44,\n        \"mMaxRPM\": 6500,\n        \"mBrake\": 0,\n        \"mThrottle\": 1,\n        \"mClutch\": 0,\n        \"mSteering\": -0.0000142459,\n        \"mGear\": 3,\n        \"mNumGears\": 6,\n        \"mOdometerKM\": 58.2071,\n        \"mAntiLockActive\": false,\n        \"mLastOpponentCollisionIndex\": -1,\n        \"mLastOpponentCollisionMagnitude\": 0,\n        \"mBoostActive\": false,\n        \"mBoostAmount\": 0\n    },\n    \"motionAndDeviceRelated\": {\n        \"mOrientation\": [\n            0.117326,\n            0.328209,\n            0.000313204\n        ],\n        \"mLocalVelocity\": [\n            -0.00461388,\n            -0.290465,\n            -32.9289\n        ],\n        \"mWorldVelocity\": [\n            -10.5572,\n            3.56614,\n            -30.9876\n        ],\n        \"mAngularVelocity\": [\n            -0.00724832,\n            0.0010549,\n            0.00358948\n        ],\n        \"mLocalAcceleration\": [\n            0.0248438,\n            0.194704,\n            -2.17865\n        ],\n        \"mWorldAcceleration\": [\n            -0.666669,\n            0.4484,\n            -2.03459\n        ],\n        \"mExtentsCentre\": [\n            -0.00000500679,\n            0.790445,\n            -0.0407101\n        ]\n    },\n    \"wheelsAndTyres\": {\n        \"mTyreFlags\": [\n            7,\n            7,\n            7,\n            7\n        ],\n        \"mTerrain\": [\n            0,\n            0,\n            0,\n            0\n        ],\n        \"mTyreY\": [\n            0.0782597,\n            0.0768357,\n            0.095097,\n            0.0931077\n        ],\n        \"mTyreRPS\": [\n            -105.846,\n            -105.864,\n            -101.137,\n            -101.143\n        ],\n        \"mTyreSlipSpeed\": [\n            1.34283,\n            1.36286,\n            0.199473,\n            0.152253\n        ],\n        \"mTyreTemp\": [\n            68.5149,\n            67.8133,\n            65.189,\n            65.1095\n        ],\n        \"mTyreGrip\": [\n            0.644026,\n            0.634983,\n            0.933223,\n            0.948769\n        ],\n        \"mTyreHeightAboveGround\": [\n            -0.0149067,\n            -0.0127458,\n            -0.0095718,\n            -0.00830468\n        ],\n        \"mTyreLateralStiffness\": [\n            250000,\n            250000,\n            250000,\n            250000\n        ],\n        \"mTyreWear\": [\n            0.00380903,\n            0.00269157,\n            0.000451088,\n            0.000247836\n        ],\n        \"mBrakeDamage\": [\n            0,\n            0,\n            0,\n            0\n        ],\n        \"mSuspensionDamage\": [\n            0,\n            0,\n            0,\n            0\n        ],\n        \"mBrakeTempCelsius\": [\n            295.939,\n            291.019,\n            293.714,\n            290.159\n        ],\n        \"mTyreTreadTemp\": [\n            341.801,\n            341.19,\n            338.399,\n            338.32\n        ],\n        \"mTyreLayerTemp\": [\n            346.098,\n            341.062,\n            325.991,\n            324.604\n        ],\n        \"mTyreCarcassTemp\": [\n            349.172,\n            347.887,\n            345.994,\n            345.379\n        ],\n        \"mTyreRimTemp\": [\n            353.915,\n            353.854,\n            356.897,\n            356.825\n        ],\n        \"mTyreInternalAirTemp\": [\n            350.446,\n            349.533,\n            349.373,\n            348.919\n        ]\n    },\n    \"carDamage\": {\n        \"mCrashState\": 0,\n        \"mAeroDamage\": 0,\n        \"mEngineDamage\": 1.19209e-7\n    },\n    \"weather\": {\n        \"mAmbientTemperature\": 24.3459,\n        \"mTrackTemperature\": 34.5188,\n        \"mRainDensity\": 0,\n        \"mWindSpeed\": 9.17293,\n        \"mWindDirectionX\": 0.707107,\n        \"mWindDirectionY\": -0.707107,\n        \"mCloudBrightness\": 2.61409\n    }\n}\n\n\nvar newMsg = {payload:newPay};\nreturn newMsg;","outputs":1,"noerr":0,"x":511,"y":600,"z":"724f24b7.8db0dc","wires":[["ee7d5aa6.1182a8","e500c31.f1aff4"]]},{"id":"ffddff1.f0022","type":"inject","name":"Test with Spoof Game Info","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":235.5,"y":600,"z":"724f24b7.8db0dc","wires":[["9f814790.607eb8"]]},{"id":"e5b666e2.1a4998","type":"debug","name":"Arguments to GPS Conv. Program","active":false,"console":"false","complete":"payload","x":1237.5,"y":1000,"z":"724f24b7.8db0dc","wires":[]},{"id":"fc2a61db.03d5a","type":"function","name":"Final Output to CSV ##CONNECT TO EXISTING FLOW##","func":"context.data = context.data || {};\n\nswitch (msg.topic) {\n    case \"GpsFlow\":\n        context.data.GpsFlow = msg.payload;\n        msg = null;\n        //console.log('GPS Flow: ' + JSON.stringify(context.data));\n        break;\n    case \"nonGpsFlow\":\n        context.data.nonGpsFlow = msg.payload;\n        msg = null;\n        //console.log('nonGPS Flow: ' + JSON.stringify(context.data));\n        break;\n    default:\n        msg = null;\n    \tbreak;\n\n}\n\n//console.log('If Statement: ' + context.data.GpsFlow + \" / \" + context.data.nonGpsFlow);\n\nif(context.data.GpsFlow != null && context.data.nonGpsFlow != null) {\n\tmsg2 = {};\n    var fullPay = context.data.GpsFlow.Lat + \",\" + context.data.GpsFlow.Long + \",\" + context.data.nonGpsFlow;\n    msg2 = {payload:fullPay};\n    context.data=null;\n\treturn msg2;\n} else return msg;","outputs":1,"noerr":0,"x":1667,"y":460,"z":"724f24b7.8db0dc","wires":[["7a7a3297.8585cc","a53ecf5.f5ac13"]]},{"id":"7a7a3297.8585cc","type":"debug","name":"CSV Output","active":true,"console":"false","complete":"payload","x":2009,"y":520,"z":"724f24b7.8db0dc","wires":[]},{"id":"a53ecf5.f5ac13","type":"file","name":"","filename":"C:\\Work\\Automotive_CLOUD\\Projects\\FTF2015\\Demo\\EKB\\PCars\\GPS_Conversion\\NodeRed_CSV_Output.csv","appendNewline":true,"createDir":false,"overwriteFile":"false","x":2321.5,"y":400,"z":"724f24b7.8db0dc","wires":[]},{"id":"435c1d06.bca3e4","type":"debug","name":"Non GPS Data - CSV","active":false,"console":"false","complete":"payload","x":1135.5,"y":360,"z":"724f24b7.8db0dc","wires":[]},{"id":"1c5fcd21.e3a033","type":"comment","name":"Instructions for Integration","info":"1.\tInstall these 3 files in ‘some’ directory (attached).\n-\tpcars_getGPSpoint.js\n-\tpcars_to_gps.js\n-\tpcars_refPoints.js\n\n2.\tOpen up the following, and change the path of var “cwd” to the path of the ‘some’ directory that the files are in (will need to be linux format, not windows)\n-\tpcars_getGPSpoint.js\n-\tpcars_to_gps.js\n\n3.\tTry to execute from this directory to check they pass out a valid result, execute by running:\n-\t> node \n\n4.\tCopy/Import Node-red flow (see at bottom of email).\n\n5.\tChange the exec node (the one with the long filename) to point to the following file (use full path reference)\n-\tnode pcars_getGPSpoint.js -945967394 345193 917875\n-\tShould get back: {\"Lat\":50.340976686288236,\"Long\":6.948383747430796}\n\n6.\tHit the “Inject Spoof GPS” node that inputs to this exec, on the debug node “GPS Output from File” you should see GPS cords in the debug window.\n-\tIf not, there might be a user privileges issue with the node-red process trying to access the files. Trying playing around with privileges of the files, worst case add a ‘sudo’ call to the start of the exec command.\n\n7.\tOn the “HTTP Request to Gaming PC API” node, change the IP address to point to the gaming PC (ask danny for this, aim to reuse same IP as kinetis device)\n-\thttp://192.168.0.5:8080/crest/v1/api\n\n8.\tStart game and deploy node-red. You should see the raw data come from “Raw game data” debug tab.\n\n9.\tIf that all works, then the output of “Final Output to CSV” should contain a CSV value identical to the one from the Kinetis device. Connect this output into the existing flow & test all the way through.\n\n10.\tIf running into trouble with the API, you can test the flow with spoofed game data by clicking “Test with Spoof Game Info” on far left of the flow.\n\nAdditional\nFiles:\n-\tpcars_getGPSpoint.js\no\tThis is the file that you call from node-red\no\tInput: trackID (see pcars_refPoints.js), WorldSpace X-Axis, WorldSpace Z-Axis (separated by space)\no\tE.g. node pcars_getGPSpoint.js -945967394 345193 917875\no\tOutput: Lat / Long of real world GPS location\n-\tpcars_to_gps.js\no\tDoes the clever math to translate from World Space to GPS\n-\tpcars_refPoints.js\no\tContains all the characteristics for the tracks.\no\tLOOK IN HERE…for new track IDs\no\tTo expand the number of tracks supported, lookup the track name (passed by the game API) and get the track ID from the “aRefPoints[1768660198]” (1768660198 being the track ID)\no\tCurrently the following are supported \n\tNuerburgring\n\tSilverstone\n\tBrands Hatch\n\tMazda Raceway\n\tAdd more to “Extract TrackId + World Space Lat/Lng” function node if desired.\n\nTiming:\nTweak the timing at which this is called by modifying the “GameAPICallTime” node.\n","x":235.02117919921872,"y":201.6261911392212,"z":"724f24b7.8db0dc","wires":[]}]